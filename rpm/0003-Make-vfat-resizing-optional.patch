From 56778cd762cf8f58c651578937964413b4299f50 Mon Sep 17 00:00:00 2001
From: Raine Makelainen <raine.makelainen@jolla.com>
Date: Fri, 3 Aug 2018 12:51:25 +0300
Subject: [PATCH 3/4] Make vfat resizing optional

Signed-off-by: Raine Makelainen <raine.makelainen@jolla.com>
---
 src/plugins/fs/vfat.c | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/src/plugins/fs/vfat.c b/src/plugins/fs/vfat.c
index 6759855..f47cd72 100644
--- a/src/plugins/fs/vfat.c
+++ b/src/plugins/fs/vfat.c
@@ -17,6 +17,11 @@
  * Author: Vratislav Podzimek <vpodzime@redhat.com>
  */
 
+#ifndef ENABLE_VFAT_RESIZE
+#define ENABLE_VFAT_RESIZE 0
+#endif
+
+#include <stdio.h>
 #include <blockdev/utils.h>
 #include <blockdev/part_err.h>
 #include <check_deps.h>
@@ -387,6 +392,7 @@ BDFSVfatInfo* bd_fs_vfat_get_info (const gchar *device, GError **error) {
  * Tech category: %BD_FS_TECH_VFAT-%BD_FS_TECH_MODE_RESIZE
  */
 gboolean bd_fs_vfat_resize (const gchar *device, guint64 new_size, GError **error) {
+#if ENABLE_VFAT_RESIZE
     PedDevice *ped_dev = NULL;
     PedGeometry geom = ZERO_INIT;
     PedGeometry new_geom = ZERO_INIT;
@@ -465,5 +471,18 @@ gboolean bd_fs_vfat_resize (const gchar *device, guint64 new_size, GError **erro
     bd_utils_report_finished (progress_id, "Completed");
 
     return TRUE;
+#else
+    gchar *msg = NULL;
+    guint64 progress_id = 0;
+    msg = g_strdup_printf ("Unsupported resize operation '%s'", device);
+    progress_id = bd_utils_report_started (msg);
+    g_free (msg);
+    (void)new_size;
 
+    g_set_error (error, BD_FS_ERROR, BD_FS_ERROR_NOT_SUPPORTED,
+                 "Resize operation in not supported '%s'", device);
+    bd_utils_report_finished (progress_id, (*error)->message);
+    set_parted_error (error, BD_FS_ERROR_NOT_SUPPORTED);
+    return FALSE;
+#endif
 }
-- 
2.17.1


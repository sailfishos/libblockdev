From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Vojtech Trefny <vtrefny@redhat.com>
Date: Wed, 26 Feb 2020 14:05:14 +0100
Subject: [PATCH] part: Take exclusive lock instead of shared before writing
 changes

Shared lock doesn't provent udev from stepping in and libfdisk
doesn't try to lock the device.
See https://systemd.io/BLOCK_DEVICE_LOCKING/
---
 src/plugins/part.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/plugins/part.c b/src/plugins/part.c
index b33fc0a..6cb94b6 100644
--- a/src/plugins/part.c
+++ b/src/plugins/part.c
@@ -284,13 +284,14 @@ static gboolean write_label (struct fdisk_context *cxt, struct fdisk_table *orig
 
     /* XXX: try to grab a lock for the device so that udev doesn't step in
        between the two operations we need to perform (see below) with its
-       BLKRRPART ioctl() call which makes the device busy */
+       BLKRRPART ioctl() call which makes the device busy
+       see https://systemd.io/BLOCK_DEVICE_LOCKING */
     dev_fd = open (disk, O_RDONLY|O_CLOEXEC);
     if (dev_fd >= 0) {
-        ret = flock (dev_fd, LOCK_SH|LOCK_NB);
+        ret = flock (dev_fd, LOCK_EX|LOCK_NB);
         while ((ret != 0) && (num_tries <= 5)) {
             g_usleep (100 * 1000); /* microseconds */
-            ret = flock (dev_fd, LOCK_SH|LOCK_NB);
+            ret = flock (dev_fd, LOCK_EX|LOCK_NB);
             num_tries++;
         }
     }
-- 
2.33.1

